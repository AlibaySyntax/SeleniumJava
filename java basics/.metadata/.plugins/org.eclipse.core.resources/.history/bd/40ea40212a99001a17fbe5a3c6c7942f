package com.syntax.REPL;
import java.util.*;

import org.apache.commons.math3.analysis.function.Add;
import org.graalvm.compiler.core.common.type.ArithmeticOpTable.BinaryOp.And;
public  interface Test171Outputs  {
	
	//double firstNumber=100.00;
    //double SecondNumber=20.00;
static double add(double a, double b){
return a+b;
}
static double sub(double a, double b) {
return a-b;	
}
static double mul(double a, double b) {
return a*b;		
}
static double dev(double a, double b) {
return a-b;		
}

abstract class Function  {
}
	//private static double SecondNumder;
	 //void add(double firstNumber, double SecondNumber) {
	//return(a+b)	;
    //}
	//@Override
	//public default void sub(double firstNumber, double SecondNumder) {
	//System.out.println("Result is ::: "+ (firstNumber - SecondNumder));		
	//}
	//@Override
	//public default void mult(double firstNumber, double SecondNumder) {
	//System.out.println("Result is ::: "+ (firstNumber * SecondNumder));	
	//}
	//@Override
	//public default void dev(double firstNumber, double SecondNumder) {
	//System.out.println("Result is ::: "+ (firstNumber / SecondNumder));	
	//}
	//abstract class Test171Outputs {
		
        //(double a, double b);
		//(double firstNumber, double SecondNumder);
		//public abstract void multMethod(double firstNumber, double SecondNumder);
		//public abstract void devMethod(double firstNumber, double SecondNumder);	
	


public static void main(String[] args, double a, double b) {
	

	

	//double firstNumber=100.00;
	//double SecondNumber=20.00;
	And fun=new And ();
	double firstNumber=100.00;
	double SecondNumber=20.00;
	//public add (double a,double b) {
	//return a+b;
	//}
	//public void subMethod(double a,double b) {	
	//}
	//public void mulMethod(double a,double b) {	
	//}
	//public void devMethod(double a,double b) {
		
	System.out.println("Result is ::: "+ (a + b));	
	System.out.println("Result is ::: "+ (a - b));	
	System.out.println("Result is ::: "+ (a * b));	
	System.out.println("Result is ::: "+ (a / b));
	
	
}
	    //@Override
}		//public void addMethod(double firstNumber, double SecondNumder) {
		//System.out.println("Result is ::: "+ (firstNumber + SecondNumder));		
		//}
		//@Override
		//public void subMethod(double firstNumber, double SecondNumder) {
		//System.out.println("Result is ::: "+ (firstNumber + SecondNumder));		
		//}
		//@Override
		//public void multMethod(double firstNumber, double SecondNumder) {
		//System.out.println("Result is ::: "+ (firstNumber + SecondNumder));	
		//}
		//@Override
		//public void devMethod(double firstNumber, double SecondNumder) {
		//System.out.println("Result is ::: "+ (firstNumber + SecondNumder));	
		//}



//}